---
author: dachi.xu@gmail.com
comments: true
date: 2015-10-25
layout: post
title:  准备技术面试的心得
categories: job searching
---

笔者最近刚刚经历了一次谷歌的电话面试，遗憾的是笔者并没有获得onsite面试的机会，但是我还是想把准备面试中的心得体会和大家分享，希望为将来会准备技术面试的朋友提供一些帮助。

技术面试中包含的种类可能千差万别，让人准备起来无所适从，但是这些题目大致可以规约于以下几个大类：

+ **数据结构与算法:**
<br>  
这个是各种技术公司面试主要考察的题目类型，即使是在数据结构／算法这一大类里，常见的数据结构／算法题目类型包括:

	1.比特操作: 可能会考察二进制数字间的运算，包括并'|',或‘&'以及异或'^',非‘~',经典的题目有数出一个整数的二进制形式里1的个数  
	2.数据类型: 数字(数论：比如n以内的质数数量),字符(字符串的搜索)  
	3.数据结构: 算法题中的重中之中，熟悉各种线性结构(数组，链表），哈希表，树结构（二叉树，红黑数，AVL),图论的实现以及种种算法.  
	4.算法设计：枚举，迭代，分治，动态规划，贪心算法.  
	5.程序设计: 例如实现一个迭代器  
<br>  	
	以上的五类题目可以用一条逻辑线串联起来，便于理解之间的层次关系:<br>    
**比特(01)=通过编码成为了=>数据类型(int, string) =通过组织成为了=>数据结构 =加上了设计成为了=>程序。**
<br>    
	当复习数据结构与算法的时候最好同时 **学习数据结构／算法的理论与练习算法题**. 对于准备面试时使用LeetCode这样的online judge是必不可少的，同时你也有很大几率碰到从来没出现过的题目，所以对于基础理论更好的理解可以帮你更快识别新题目在考察什么数据类型和算法。   
	<br>
	*推举学习材料:*<br>  
	1.[Algorithm 4th Ed](http://www.amazon.com/Algorithms-4th-Edition-Robert-Sedgewick/dp/032157351X)  
	2.[Introduction to algorithm](http://www.amazon.com/gp/product/0262033844/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687762&pf_rd_s=lpo-top-stripe-1&pf_rd_t=201&pf_rd_i=032157351X&pf_rd_m=ATVPDKIKX0DER&pf_rd_r=0JG05DDS4Z9GBQD0JX5A)  
	3.[CC150](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&ie=UTF8&qid=1445800204&sr=1-1&keywords=CC150)  
	4.[LeetCode](http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&ie=UTF8&qid=1445800204&sr=1-1&keywords=CC150)  
	5.这个北大在[Coursera](https://www.coursera.org/learn/shuju-jiegou-suanfa)上的公开课我也觉得很不错.    
<br>	    
  		
+ **写代码**:<br>	      
	在面试的时候，（谷歌电面的时候是在Google Doc上写代码，onsite是在白板上），你需要不依赖IDE来写代码，所以你必须熟练掌握你惯用语言的语法以及种种细节，练习的最好方式是先复习语法基础，然后用你的语言来实现种种数据结构与算法，尽量使用text editor来实现。对于Python爱好者我推荐这篇文章[The Hitchhiker's guide to python](http://docs.python-guide.org/en/latest/)来提高Python的姿势水平。
<br><br>    	            
  
+ **操作系统**:<br>  
	一般情况下需要掌握操作系统的进程管理方面的知识（内存管理／文件系统的知识可酌情学习），掌握进程、线程、并发、并行、锁、死锁等概念。
	
	推荐学习材料:  
	1 [Modern Opearting System](http://www.amazon.com/gp/product/0136006639?keywords=modern%20operating%20system&qid=1445800770&ref_=sr_1_2&sr=8-2)  
	2 [另外一个Cousera上的北大关于操作系统的公开课，基于上面这本书为提纲](https://www.coursera.org/course/os)    
<br><br>
	
+ **脚本／正则表达式**:<br>  
	笔者就被问了一道正则的题啊, 所以同学们你们也需要多少知道一点正则方面的知识啊, 最好平时多玩玩command line和正则相关的一些小工具(grep/sed/awk).推荐一本书，又讲了操作系统，又讲Shell scritping／正则等相关知识：[How Linux Works](http://www.amazon.com/gp/product/1593275676?keywords=how%20linux%20works&qid=1445824874&ref_=sr_1_1&sr=8-1)    
<br><br>

+ **系统设计**:<br>  
	阅读谷歌的[mapreduce](http://research.google.com/archive/mapreduce.html)/[big table](http://research.google.com/archive/bigtable.html) 论文，延伸阅读里的第二个链接中有丰富优秀的资源，切克闹。  
<br><br>

+ **离散数学**:<br>
  
	一些需要复习的概念包括但不限于：  
	1.递归证明  
	2.布尔代数  
	3.排列组合  
	4.概率论  
	
	这个[MIT的离散数学公开课](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/index.htm?utm_source=OCWDept&utm_medium=CarouselSm&utm_campaign=FeaturedCourse) 非常好，其中有一趟跟图论有关的课更是非常“内涵”，去看就懂了。   
<br><br>    

###延伸阅读:
* [The Five Essential Phone-Screen Questions](https://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions) 著名程序员加喷神Steve Yegge所写的电面五个经典题目
* [Good read on system desing interview](https://github.com/checkcheckzz/system-design-interview) 系统设计读物

祝所有在准备技术面试的同学同仁们取得好成绩，我继续刷题去了噢耶。

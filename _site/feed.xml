<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dachi&#39;s Blog 达迟的博客</title>
    <description>Dachi&#39;s Personal Blog.
</description>
    <link>http://dachicj.com/</link>
    <atom:link href="http://dachicj.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 05 Nov 2015 23:25:38 -0600</pubDate>
    <lastBuildDate>Thu, 05 Nov 2015 23:25:38 -0600</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>准备技术面试的心得</title>
        <description>&lt;p&gt;笔者最近刚刚经历了一次谷歌的电话面试，遗憾的是笔者并没有获得onsite面试的机会，但是我还是想把准备面试中的心得体会和大家分享，希望为将来会准备技术面试的朋友提供一些帮助。&lt;/p&gt;

&lt;p&gt;技术面试中包含的种类可能千差万别，让人准备起来无所适从，但是这些题目大致可以规约于以下几个大类：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;数据结构与算法:&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;
这个是各种技术公司面试主要考察的题目类型，即使是在数据结构／算法这一大类里，常见的数据结构／算法题目类型包括:&lt;/p&gt;

    &lt;p&gt;1.比特操作: 可能会考察二进制数字间的运算，包括并’|’,或‘&amp;amp;’以及异或’^’,非‘~’,经典的题目有数出一个整数的二进制形式里1的个数&lt;br /&gt;
  2.数据类型: 数字(数论：比如n以内的质数数量),字符(字符串的搜索)&lt;br /&gt;
  3.数据结构: 算法题中的重中之中，熟悉各种线性结构(数组，链表），哈希表，树结构（二叉树，红黑数，AVL),图论的实现以及种种算法.&lt;br /&gt;
  4.算法设计：枚举，迭代，分治，动态规划，贪心算法.&lt;br /&gt;
  5.程序设计: 例如实现一个迭代器&lt;br /&gt;
&lt;br /&gt;  	
  以上的五类题目可以用一条逻辑线串联起来，便于理解之间的层次关系:&lt;br /&gt;  &lt;br /&gt;
&lt;strong&gt;比特(01)=通过编码成为了=&amp;gt;数据类型(int, string) =通过组织成为了=&amp;gt;数据结构 =加上了设计成为了=&amp;gt;程序。&lt;/strong&gt;
&lt;br /&gt;  &lt;br /&gt;
  当复习数据结构与算法的时候最好同时 &lt;strong&gt;学习数据结构／算法的理论与练习算法题&lt;/strong&gt;. 对于准备面试时使用LeetCode这样的online judge是必不可少的，同时你也有很大几率碰到从来没出现过的题目，所以对于基础理论更好的理解可以帮你更快识别新题目在考察什么数据类型和算法。 &lt;br /&gt;
  &lt;br /&gt;
  &lt;em&gt;推举学习材料:&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;
  1.&lt;a href=&quot;http://www.amazon.com/Algorithms-4th-Edition-Robert-Sedgewick/dp/032157351X&quot;&gt;Algorithm 4th Ed&lt;/a&gt;&lt;br /&gt;
  2.&lt;a href=&quot;http://www.amazon.com/gp/product/0262033844/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687762&amp;amp;pf_rd_s=lpo-top-stripe-1&amp;amp;pf_rd_t=201&amp;amp;pf_rd_i=032157351X&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;pf_rd_r=0JG05DDS4Z9GBQD0JX5A&quot;&gt;Introduction to algorithm&lt;/a&gt;&lt;br /&gt;
  3.&lt;a href=&quot;http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1445800204&amp;amp;sr=1-1&amp;amp;keywords=CC150&quot;&gt;CC150&lt;/a&gt;&lt;br /&gt;
  4.&lt;a href=&quot;http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1445800204&amp;amp;sr=1-1&amp;amp;keywords=CC150&quot;&gt;LeetCode&lt;/a&gt;&lt;br /&gt;
  5.这个北大在&lt;a href=&quot;https://www.coursera.org/learn/shuju-jiegou-suanfa&quot;&gt;Coursera&lt;/a&gt;上的公开课我也觉得很不错.  &lt;br /&gt;
&lt;br /&gt;	    &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;写代码&lt;/strong&gt;:&lt;br /&gt;	    &lt;br /&gt;
  在面试的时候，（谷歌电面的时候是在Google Doc上写代码，onsite是在白板上），你需要不依赖IDE来写代码，所以你必须熟练掌握你惯用语言的语法以及种种细节，练习的最好方式是先复习语法基础，然后用你的语言来实现种种数据结构与算法，尽量使用text editor来实现。对于Python爱好者我推荐这篇文章&lt;a href=&quot;http://docs.python-guide.org/en/latest/&quot;&gt;The Hitchhiker’s guide to python&lt;/a&gt;来提高Python的姿势水平。
&lt;br /&gt;&lt;br /&gt;    	            &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;操作系统&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  一般情况下需要掌握操作系统的进程管理方面的知识（内存管理／文件系统的知识可酌情学习），掌握进程、线程、并发、并行、锁、死锁等概念。&lt;/p&gt;

    &lt;p&gt;推荐学习材料:&lt;br /&gt;
  1 &lt;a href=&quot;http://www.amazon.com/gp/product/0136006639?keywords=modern%20operating%20system&amp;amp;qid=1445800770&amp;amp;ref_=sr_1_2&amp;amp;sr=8-2&quot;&gt;Modern Opearting System&lt;/a&gt;&lt;br /&gt;
  2 &lt;a href=&quot;https://www.coursera.org/course/os&quot;&gt;另外一个Cousera上的北大关于操作系统的公开课，基于上面这本书为提纲&lt;/a&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;脚本／正则表达式&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  笔者就被问了一道正则的题啊, 所以同学们你们也需要多少知道一点正则方面的知识啊, 最好平时多玩玩command line和正则相关的一些小工具(grep/sed/awk).推荐一本书，又讲了操作系统，又讲Shell scritping／正则等相关知识：&lt;a href=&quot;http://www.amazon.com/gp/product/1593275676?keywords=how%20linux%20works&amp;amp;qid=1445824874&amp;amp;ref_=sr_1_1&amp;amp;sr=8-1&quot;&gt;How Linux Works&lt;/a&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;系统设计&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  阅读谷歌的&lt;a href=&quot;http://research.google.com/archive/mapreduce.html&quot;&gt;mapreduce&lt;/a&gt;/&lt;a href=&quot;http://research.google.com/archive/bigtable.html&quot;&gt;big table&lt;/a&gt; 论文，延伸阅读里的第二个链接中有丰富优秀的资源，切克闹。&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;离散数学&lt;/strong&gt;:&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;一些需要复习的概念包括但不限于：&lt;br /&gt;
  1.递归证明&lt;br /&gt;
  2.布尔代数&lt;br /&gt;
  3.排列组合&lt;br /&gt;
  4.概率论  &lt;/p&gt;

    &lt;p&gt;这个&lt;a href=&quot;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/index.htm?utm_source=OCWDept&amp;amp;utm_medium=CarouselSm&amp;amp;utm_campaign=FeaturedCourse&quot;&gt;MIT的离散数学公开课&lt;/a&gt; 非常好，其中有一趟跟图论有关的课更是非常“内涵”，去看就懂了。 &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;    &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;延伸阅读:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions&quot;&gt;The Five Essential Phone-Screen Questions&lt;/a&gt; 著名程序员加喷神Steve Yegge所写的电面五个经典题目&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/checkcheckzz/system-design-interview&quot;&gt;Good read on system desing interview&lt;/a&gt; 系统设计读物&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DachiCoding/programming_practice/blob/master/python/sort.py&quot;&gt;我自己用Python实现各种排序算法的代码&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;祝所有在准备技术面试的同学同仁们取得好成绩，我继续刷题去了噢耶。&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Oct 2015 00:00:00 -0500</pubDate>
        <link>http://dachicj.com/job/searching/2015/10/25/%E5%87%86%E5%A4%87%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E7%9A%84%E5%BF%83%E5%BE%97.html</link>
        <guid isPermaLink="true">http://dachicj.com/job/searching/2015/10/25/%E5%87%86%E5%A4%87%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E7%9A%84%E5%BF%83%E5%BE%97.html</guid>
        
        
        <category>job</category>
        
        <category>searching</category>
        
      </item>
    
      <item>
        <title>Notes on preapring technique interview</title>
        <description>&lt;p&gt;I recently had a phone screen interview with Google, unfortunately I was not able to move forward to an onsite interview, but I would love to share something about preparing a technique interview. &lt;/p&gt;

&lt;p&gt;Technique interview questions could have a great variety of different stuff, let me “hash” them into few categories:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Data Structure and Algorithm:&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;
This is where most of your interview questiones will come from, you have to spend a decent amount of time on it. Data structure and algorithm topics includes:&lt;/p&gt;

    &lt;p&gt;1.Bits manipulation: Bitwise opeartions&lt;br /&gt;
  2.Data type related: Math(number theory),String(String conversion, pattern matching)&lt;br /&gt;
  3.Data structure related: Linear DS(Array,LinkedList), Hahses, Trees and Graph.&lt;br /&gt;
  4.General algo design: Divide and conquer, Dynamic programming/Greedy algo.&lt;br /&gt;
  5.Design: e.g Implementing iteratro&lt;br /&gt;
&lt;br /&gt;  	
  There is a logic sequence might help you better connecting different topics above togather:&lt;br /&gt;  &lt;br /&gt;
&lt;strong&gt;Bit(01)=(Enconde)=&amp;gt;Data Type(int, string) =(Organize)=&amp;gt;Data Structure =(Design)=&amp;gt;Programs.&lt;/strong&gt;
&lt;br /&gt;  &lt;br /&gt;
  When reviewing DS/algorithm problems, it will be good to &lt;strong&gt;study fundamental theory and practice algorithm exercises&lt;/strong&gt; at the same time. You definitely want to use some OJ such as LeetCode but it is also necessary to review your algorithm textbook in case you run across some question that has never seen, so you still can recoginze what kind of problem it is in an instant.&lt;br /&gt;
  &lt;br /&gt;
  &lt;em&gt;Recommend study material:&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;
  1.&lt;a href=&quot;http://www.amazon.com/Algorithms-4th-Edition-Robert-Sedgewick/dp/032157351X&quot;&gt;Algorithm 4th Ed&lt;/a&gt;&lt;br /&gt;
  2.&lt;a href=&quot;http://www.amazon.com/gp/product/0262033844/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687762&amp;amp;pf_rd_s=lpo-top-stripe-1&amp;amp;pf_rd_t=201&amp;amp;pf_rd_i=032157351X&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;pf_rd_r=0JG05DDS4Z9GBQD0JX5A&quot;&gt;Intro to algorithm&lt;/a&gt;&lt;br /&gt;
  3.&lt;a href=&quot;http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1445800204&amp;amp;sr=1-1&amp;amp;keywords=CC150&quot;&gt;CC150&lt;/a&gt;&lt;br /&gt;
  4.&lt;a href=&quot;http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1445800204&amp;amp;sr=1-1&amp;amp;keywords=CC150&quot;&gt;LeetCode&lt;/a&gt;&lt;br /&gt;
  5.I also found this data strucutre open course on &lt;a href=&quot;https://www.coursera.org/learn/shuju-jiegou-suanfa&quot;&gt;Coursera&lt;/a&gt; really helpful.  &lt;br /&gt;
&lt;br /&gt;	    &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Coding&lt;/strong&gt;:&lt;br /&gt;	    &lt;br /&gt;
  Know detail stuff about your favoriate language, try to pracitce them with implemnting different data structures and algorihtms, for python lover I recommend this &lt;a href=&quot;http://docs.python-guide.org/en/latest/&quot;&gt;The Hitchhiker’s guide to python&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;    	            &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Opearting System knowledeges&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  You might need to familar yourself with process manageemnt, mutex, semaphore, lock(deadlock) and parallel computing concepts.&lt;/p&gt;

    &lt;p&gt;Recommend material:&lt;br /&gt;
  1 &lt;a href=&quot;http://www.amazon.com/gp/product/0136006639?keywords=modern%20operating%20system&amp;amp;qid=1445800770&amp;amp;ref_=sr_1_2&amp;amp;sr=8-2&quot;&gt;Modern Opearting System&lt;/a&gt;&lt;br /&gt;
  2 &lt;a href=&quot;https://www.coursera.org/course/os&quot;&gt;A coursera open course from PKU about OS&lt;/a&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Shell scripting/Regex&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  I was given a regex problem at the interview, so you should expect yourself will run across it too, try to play with command line and regex (grep/sed/awk) a little bit. One of my favorite book on the topic is &lt;a href=&quot;http://www.amazon.com/gp/product/1593275676?keywords=how%20linux%20works&amp;amp;qid=1445824874&amp;amp;ref_=sr_1_1&amp;amp;sr=8-1&quot;&gt;How Linux Works&lt;/a&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;System Design&lt;/strong&gt;:&lt;br /&gt;&lt;br /&gt;
  Read google &lt;a href=&quot;http://research.google.com/archive/mapreduce.html&quot;&gt;mapreduce&lt;/a&gt;/&lt;a href=&quot;http://research.google.com/archive/bigtable.html&quot;&gt;big table&lt;/a&gt; papers and stuff recommend in further reading.&lt;br /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Discrete mathematics&lt;/strong&gt;:&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;You might want to take sometime to review:&lt;br /&gt;
  1.Induction and recursive&lt;br /&gt;
  2.Boolean algebra&lt;br /&gt;
  3.Couting&lt;br /&gt;
  4.Probablity&lt;/p&gt;

    &lt;p&gt;This &lt;a href=&quot;http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/index.htm?utm_source=OCWDept&amp;amp;utm_medium=CarouselSm&amp;amp;utm_campaign=FeaturedCourse&quot;&gt;MIT Open Course of discrete mathematic&lt;/a&gt; is a great stuff to check out. 
&lt;br /&gt;&lt;br /&gt;    &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;further-reading&quot;&gt;Further reading:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions&quot;&gt;The Five Essential Phone-Screen Questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/checkcheckzz/system-design-interview&quot;&gt;Good read on system desing interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 25 Oct 2015 00:00:00 -0500</pubDate>
        <link>http://dachicj.com/job/searching/2015/10/25/Notes-on-preparing-technique-interview.html</link>
        <guid isPermaLink="true">http://dachicj.com/job/searching/2015/10/25/Notes-on-preparing-technique-interview.html</guid>
        
        
        <category>job</category>
        
        <category>searching</category>
        
      </item>
    
      <item>
        <title>CSAPP Study Notes 10/27/2014</title>
        <description>&lt;h4 id=&quot;study-focus-unix-io-and-standard-io-in-c&quot;&gt;Study Focus: Unix I/O and Standard I/O in C&lt;/h4&gt;

&lt;h4 id=&quot;study-material-computer-system-a-programmers-perspective&quot;&gt;Study Material: Computer System A Programmer’s Perspective&lt;/h4&gt;

&lt;h4 id=&quot;study-summary&quot;&gt;Study Summary:&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1. What is I/O (Input/Output)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to the definitions in CSAPP:&lt;/p&gt;

&lt;p&gt;Memory ==(Output)===&amp;gt; I/O Devices&lt;/p&gt;

&lt;p&gt;Memory &amp;lt;==(Input)====  I/O Devices&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Type and levels of I/O operations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2.1 Unix I/O (Low level)&lt;/p&gt;

&lt;p&gt;function calls including: open(), close(), read(), write()&lt;/p&gt;

&lt;p&gt;2.2 Standard I/O (C Library)&lt;/p&gt;

&lt;p&gt;function calls including: fopen(), fread(), fwrite(), fclose(),fstat() and etc.&lt;/p&gt;

&lt;p&gt;Those functions are mostly used in c programming i/o operations&lt;/p&gt;

&lt;p&gt;2.3 Robust I/O&lt;/p&gt;

&lt;p&gt;Inlcuding rio_readn, rio_writen(), RIO are mostly used for network socket related programming.&lt;/p&gt;

</description>
        <pubDate>Mon, 27 Oct 2014 16:49:29 -0500</pubDate>
        <link>http://dachicj.com/computer/science/2014/10/27/csapp-study-notes-2.html</link>
        <guid isPermaLink="true">http://dachicj.com/computer/science/2014/10/27/csapp-study-notes-2.html</guid>
        
        
        <category>computer</category>
        
        <category>science</category>
        
      </item>
    
      <item>
        <title>CSAPP Study Notes 09/17/2014</title>
        <description>&lt;p&gt;&lt;strong&gt;Programming:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;study-material-computer-systems-a-programmers-perspective&quot;&gt;Study material: Computer Systems A Programmer’s Perspective&lt;/h4&gt;

&lt;h4 id=&quot;study-focus-optimization-in-c-language&quot;&gt;Study focus: Optimization (in C language)&lt;/h4&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary:&lt;/h4&gt;

&lt;p&gt;One of the most important concerning when optimizing you code is to ensure a safety optimization, which is your optimization&lt;/p&gt;

&lt;p&gt;will not change the behavior of your program.&lt;/p&gt;

&lt;p&gt;For example : pointer aliasing.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;void foo1(int *xp, int *yp){&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;  *xp += *yp;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;  *xp += *yp;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;could be optimized into&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;void foo2(int *xp, int *yp){&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; &lt;em&gt;xp += 2&lt;/em&gt; *yp;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However when I was trying to execute following code.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-17-at-3.45.09-PM.png&quot;&gt;&lt;img src=&quot;http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-17-at-3.45.09-PM-300x232.png&quot; alt=&quot;Screen Shot 2014-09-17 at 3.45.09 PM&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am getting an unexpected output like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Before Swap
1 1
0x7fff5f659978 0x7fff5f659978&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After Swap
0 0
0x7fff5f659978 0x7fff5f659978&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be careful when optimizing involved pointer aliasing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No time for product analysis today. You catch me! Send “catch you lazy man!” to me on Weixin(WeChat) and there is a small reward for you! （offer expires at 23:59 09/17/2014)&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Sep 2014 15:49:39 -0500</pubDate>
        <link>http://dachicj.com/computer/science/2014/09/17/csapp-study-notes-1.html</link>
        <guid isPermaLink="true">http://dachicj.com/computer/science/2014/09/17/csapp-study-notes-1.html</guid>
        
        
        <category>computer</category>
        
        <category>science</category>
        
      </item>
    
      <item>
        <title>JS and jQuery Study Notes 09/16/2014</title>
        <description>&lt;p&gt;&lt;strong&gt;Programming:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;study-material-javascript-and-jquery&quot;&gt;Study material: JavaScript and JQuery&lt;/h4&gt;

&lt;h4 id=&quot;study-focus-dom-getupdate-element-content&quot;&gt;Study focus: DOM get/update element content&lt;/h4&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary:&lt;/h4&gt;

&lt;p&gt;Assume we have a list element&lt;/p&gt;

&lt;li id=&quot;one&quot;&gt;List&lt;/li&gt;

&lt;p&gt;we can modify two things about this element: content and property.&lt;/p&gt;

&lt;p&gt;Content:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;li.iinerHTML  // text and markup&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;li.textContent  // text only&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;li.iinerText&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;document.getElementById(“one”).firstChild.nodeValue // when you select the text node, you can change its value by this way&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Property:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;element.getAttribute();&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;element.setAttribute();&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;element.removeAttribute():&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Changing Elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;document.createElment() // create element&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;document.createTextNode(); // create text node&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;element.appendChild(new_element); // insert the new element into the element calling this function.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;element.revmoveChild(); // remove child element from its parent node.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Product:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;o2o-online-to-offline-products-analysis&quot;&gt;O2O (Online to Offline) Products Analysis:&lt;/h4&gt;

&lt;p&gt;dropbox link: https://www.dropbox.com/s/kg4n441drd03sok/%E5%8C%97%E4%BA%AC%E4%BA%8C%E6%9C%9F-%E5%BE%90%E8%BE%BE%E8%BF%9F-%E7%AC%AC%E4%B9%9D%E8%AF%BE%E5%A0%82%E4%B9%9D%E6%9C%88%E4%BD%9C%E4%B8%9A.pdf?dl=0&lt;/p&gt;

&lt;p&gt;If the link is not working and you are interested in reading my analysis, please email me at dachi.xu@gmail.com and I will send you an copy.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Sep 2014 17:04:43 -0500</pubDate>
        <link>http://dachicj.com/web/development/2014/09/16/js-jQuery-study-notes-4.html</link>
        <guid isPermaLink="true">http://dachicj.com/web/development/2014/09/16/js-jQuery-study-notes-4.html</guid>
        
        
        <category>web</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>JS and jQuery Study Notes 09/15/2014</title>
        <description>&lt;p&gt;&lt;strong&gt;Programming:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;study-materialjavascript--jquery-jon-duckett&quot;&gt;Study material: JavaScript &amp;amp; JQuery (Jon Duckett)&lt;/h4&gt;

&lt;h4 id=&quot;study-focus-how-to-select-elements-in-dom-tree&quot;&gt;Study focus: how to select elements in DOM Tree&lt;/h4&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary:&lt;/h4&gt;

&lt;p&gt;Let’s write some simple piece of mark-ups:&lt;/p&gt;

&lt;html&gt;
&lt;head&gt;&lt;/head&gt;
&lt;body&gt;
&amp;lt;h1 id=“header”&amp;gt;Header
&lt;ul&gt;
&amp;lt;li id=“1” class=“list&quot;&amp;gt;1
&amp;lt;li id=“2” class=“list”&amp;gt;2
&amp;lt;li id=“3” class=“list”&amp;gt;3
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;ul&gt;
  &lt;li&gt;Selecting individual element:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s say the “h1” element, we can do it by&lt;/p&gt;

&lt;p&gt;var headerElement = &lt;strong&gt;document.getElementById(‘header’);  //document.getElementById(id of the element you want to select)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;var ulElement = &lt;strong&gt;document.querySelector(‘ul’); // return the first match &lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;And if we want to select a group of elements:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;var listElement = &lt;strong&gt;document.getElementByClassName(“list”); // parameter should be the class name of the elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;var listElement = &lt;strong&gt;document.getElementByTagName(“li”); //parameter should be the element type, such as h1, p, li and etc…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;var listElement = &lt;strong&gt;document.querySelectorAll(“li.list”); // parameter could be type or id or class.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt; Once we get some elements , we can traverse around the element(s):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;going up: listElement.&lt;strong&gt;parentNode&lt;/strong&gt; is ulElement&lt;/p&gt;

&lt;p&gt;going dn: ulElement.&lt;strong&gt;firstChild&lt;/strong&gt; is the first li element, ulElement.&lt;strong&gt;lastChild&lt;/strong&gt; is the third li element&lt;/p&gt;

&lt;p&gt;going left &amp;amp; right:  listElement[1].&lt;strong&gt;previousSibling&lt;/strong&gt; will be listElement[0], listElement[1].&lt;strong&gt;nextSibling&lt;/strong&gt; will be listElement[2];&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Product:&lt;/strong&gt; Timeline Hunt (http://timeline-product-hunt.herokuapp.com/)&lt;/p&gt;

&lt;h4 id=&quot;description-the-best-products-of-product-hunt-on-a-timeline&quot;&gt;Description: The best products of Product Hunt on a timeline&lt;/h4&gt;

&lt;h4 id=&quot;prototype&quot;&gt;Prototype:&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-15-at-10.25.24-AM.png&quot;&gt;&lt;img src=&quot;http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-15-at-10.25.24-AM-300x194.png&quot; alt=&quot;Screen Shot 2014-09-15 at 10.25.24 AM&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Sep 2014 10:26:30 -0500</pubDate>
        <link>http://dachicj.com/web/development/2014/09/15/js-jQuery-study-notes-3.html</link>
        <guid isPermaLink="true">http://dachicj.com/web/development/2014/09/15/js-jQuery-study-notes-3.html</guid>
        
        
        <category>web</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>JS and jQuery Study Notes 09/14/2014</title>
        <description>&lt;p&gt;&lt;strong&gt;Programming: &lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;studying-material-javascript--jquery-jon-duckett&quot;&gt;Studying material: JavaScript &amp;amp; JQuery (Jon Duckett)&lt;/h4&gt;

&lt;h4 id=&quot;studying-focus-javascript-objects&quot;&gt;Studying focus: JavaScript Objects&lt;/h4&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary:&lt;/h4&gt;

&lt;p&gt;Objects Structure in JavaScript&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;  Browser Objects:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Window Object (Browser object, contains property and methods of browser interface , such as window.alert() //pop-up)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Document Object (Object of DOM Tree, HTML -&amp;gt; HEAD / BODY)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;History (stores info about the pages you visited)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Location (url of page)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Navigator (info about browser)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Screen (info about devices)&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;  Global Objects:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;String(string type)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Number(number type)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Boolean(boolean type)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Other built-in : date/math/regex(regular expression)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Product:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;product-name-hacker-experience-httpshackerexperiencecomwelcome&quot;&gt;Product Name: Hacker Experience (https://hackerexperience.com/welcome)&lt;/h4&gt;

&lt;h4 id=&quot;description-online-hacking-simulation-game&quot;&gt;Description: Online hacking simulation game&lt;/h4&gt;

&lt;h4 id=&quot;prototypes&quot;&gt;Prototypes:&lt;/h4&gt;

&lt;p&gt;Front Page&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dachicj.com/wp-content/uploads/2014/09/照片-14-9-14-上午11-03-05.png&quot;&gt;&lt;img src=&quot;http://dachicj.com/wp-content/uploads/2014/09/照片-14-9-14-上午11-03-05-225x300.png&quot; alt=&quot;照片 14-9-14 上午11 03 05&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back-end&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dachicj.com/wp-content/uploads/2014/09/照片-14-9-14-上午11-07-14.png&quot;&gt;&lt;img src=&quot;http://dachicj.com/wp-content/uploads/2014/09/照片-14-9-14-上午11-07-14-225x300.png&quot; alt=&quot;照片 14-9-14 上午11 07 14&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Sep 2014 11:23:18 -0500</pubDate>
        <link>http://dachicj.com/web/development/2014/09/14/js-jQuery-study-notes-2.html</link>
        <guid isPermaLink="true">http://dachicj.com/web/development/2014/09/14/js-jQuery-study-notes-2.html</guid>
        
        
        <category>web</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>angularJS study notes 09/13/2014</title>
        <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Programming: AngularJS (Material: https://docs.angularjs.org/tutorial)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A example of Angular JS application template structure&lt;/p&gt;

&lt;html ng-app=&quot;appName&quot;&gt; // ng-app set the root of the angularJS application

&lt;head&gt;&lt;/head&gt;

&lt;body ng-controller=&quot;controllerName&quot;&gt; // ng-controller set the scope of application

&lt;div ng-repeat=&quot;&quot;&gt;

&lt;p&gt;Hello,  // binding data with the controller







The connection between the template / model / controller would looks like

[![tutorial_02](http://dachicj.com/wp-content/uploads/2014/09/tutorial_02-300x182.png)](http://dachicj.com/wp-content/uploads/2014/09/tutorial_02.png)



_**Product: http://www.algomation.com/**_

Strategy: NA

Scope: NA

Skeleton: NA

Structure: NA

Surface:



	
  * wireframe


[![Screen Shot 2014-09-13 at 12.33.18 PM](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.33.18-PM-300x202.png)](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.33.18-PM.png)

[![Screen Shot 2014-09-13 at 12.18.12 PM](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.18.12-PM-300x203.png)](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.18.12-PM.png)







	
  * sitemap


[![Screen Shot 2014-09-13 at 12.28.23 PM](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.28.23-PM-300x242.png)](http://dachicj.com/wp-content/uploads/2014/09/Screen-Shot-2014-09-13-at-12.18.12-PM.png)
&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;
</description>
        <pubDate>Sat, 13 Sep 2014 12:43:47 -0500</pubDate>
        <link>http://dachicj.com/web/development/2014/09/13/angularJS-study-notes.html</link>
        <guid isPermaLink="true">http://dachicj.com/web/development/2014/09/13/angularJS-study-notes.html</guid>
        
        
        <category>web</category>
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>Python Study Notes 09/04/2014</title>
        <description>&lt;p&gt;Summary of what I’ve studied today:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Python Project Skeleton should look like this:
~/bin
~/docs
~/source
~/tests&lt;/p&gt;

&lt;p&gt;Helpful Python packages:
#### pip
#### nosetest
#### virtualenv&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Vim&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Searching:
#### /search text + ENTER
#### after search use n to go to next match or ? go to previous match
#### use “set hlsearch” to turn on the highlight of matched text.
#### use “set incsearch” to highlight matching text as soon as you type(rather than after you press the ‘ENTER’)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;LINUX&lt;/em&gt;&lt;/strong&gt;:
#### passwd: to change password of user
#### useful shortcuts:
CTRL + A : go to the left side of the line.
CTRL + E : go to the right side of the line.
CTRL + D : log out or exit
CTRL + R : search command history ( you can also type ‘history’ to list all previous commands you typed. )&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Sep 2014 18:03:18 -0500</pubDate>
        <link>http://dachicj.com/programming/language/2014/09/04/python-study-notes.html</link>
        <guid isPermaLink="true">http://dachicj.com/programming/language/2014/09/04/python-study-notes.html</guid>
        
        
        <category>programming</category>
        
        <category>language</category>
        
      </item>
    
      <item>
        <title>Write a class in python</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Programming:&lt;/em&gt;&lt;/strong&gt;
&lt;strong&gt;Python&lt;/strong&gt;
#### write a class in python:
class Parent(object):
  def &lt;strong&gt;init&lt;/strong&gt;(self):
    #### constructor&lt;/p&gt;

&lt;p&gt;def method(self,parameter):
    #### do something&lt;/p&gt;

&lt;p&gt;class Child(Parent):&lt;/p&gt;

&lt;p&gt;def &lt;strong&gt;init&lt;/strong&gt;(self):
     #### constructor&lt;/p&gt;

&lt;p&gt;def method(self,parameter):
      super(Child).method(self,parameter) #### override parent’s method&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vim:&lt;/strong&gt;
Searching
#### f : find text
#### t : stop before text&lt;/p&gt;

&lt;p&gt;Moving
#### ctrl + u: scroll up pages
#### ctrl + d: scroll down pages&lt;/p&gt;

&lt;p&gt;Deleting
#### dw : delete a word&lt;/p&gt;

&lt;h4 id=&quot;j--joining&quot;&gt;J : joining&lt;/h4&gt;

&lt;h4 id=&quot;change-case&quot;&gt;~ : change case&lt;/h4&gt;

&lt;h4 id=&quot;how-to-record-a-macro&quot;&gt;how to record a macro:&lt;/h4&gt;
&lt;p&gt;qa - q:record / a: store the macro at register a
do something
q - stop recording
&lt;a href=&quot;https://github.com/a&quot; class=&quot;user-mention&quot;&gt;@a&lt;/a&gt; - call the macro at register a&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Product:&lt;/em&gt;&lt;/strong&gt;
#### 1 mockup per day
https://itunes.apple.com/cn/app/bao-he-jian-fei-jian-shen/id457856023?l=en&amp;amp;mt;=8&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dachicj.com/wp-content/uploads/2014/09/mockup.png&quot;&gt;&lt;img src=&quot;http://dachicj.com/wp-content/uploads/2014/09/mockup-300x100.png&quot; alt=&quot;mockup&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Sep 2014 15:23:42 -0500</pubDate>
        <link>http://dachicj.com/programming/language/2014/09/03/write-a-class-in-python.html</link>
        <guid isPermaLink="true">http://dachicj.com/programming/language/2014/09/03/write-a-class-in-python.html</guid>
        
        
        <category>programming</category>
        
        <category>language</category>
        
      </item>
    
  </channel>
</rss>
